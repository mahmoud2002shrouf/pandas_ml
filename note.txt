%d: يستخدم لتنسيق الأعداد الصحيحة (integers). على سبيل المثال، إذا كانت القيم [1, 2, 3] فسيتم حفظها كـ:

1
2
3

%f: يستخدم لتنسيق القيم العشرية (float). القيمة الافتراضية تعرض 6 منازل عشرية. إذا كانت القيم [1.234567, 2.345678] فسيتم حفظها كـ:

1.234567
2.345678

%.2f: لتحديد عدد المنازل العشرية. هنا، سيتم عرض منزلتين عشريتين فقط. إذا كانت القيم [1.234567, 2.345678] فسيتم حفظها كـ:

1.23
2.35

%e أو %E: يستخدم لتنسيق القيم في صيغة علمية (scientific notation). على سبيل المثال، القيمة 12345.67 سيتم حفظها كـ:

    1.234567e+04

    %g: يستخدم لتنسيق القيم باستخدام الصيغة الأكثر اقتصادية (إما عادية أو علمية)، ويختار تلقائيًا أفضل تنسيق لعرض الأرقام بشكل مختصر.

    %s: يستخدم لتنسيق النصوص (strings). يمكن استخدامه إذا كنت ترغب في حفظ القيم النصية في الملف.

أمثلة إضافية:

    %04d: يحفظ الأرقام الصحيحة مضافة بالأصفار من اليسار للوصول إلى أربعة خانات، مثل 0001، 0002.
    %.3f: لحفظ الأرقام العشرية مع ثلاث منازل عشرية، مثل 1.234.



///////////////////////////////////////////////////////////////////////////////////
n_samples=300: يحدد عدد العينات أو البيانات التي سيتم إنشاؤها، وهنا يكون العدد 300 عينة.

flip_y=0.1: يمثل نسبة البيانات التي سيتم قلب تصنيفها بشكل عشوائي. بمعنى أن 10% من البيانات سيتم تغيير تصنيفها الأصلي لجعل المشكلة أكثر صعوبة، مما يضيف بعض الضوضاء إلى البيانات.

class_sep=2.5: يحدد المسافة الفاصلة بين الفئات المختلفة. كلما زادت هذه القيمة، كلما كانت الفئات أكثر تميزًا وسهولة في التصنيف. هنا يتم تعيين الفاصل ليكون 2.5، مما يعني وجود مسافة كبيرة نسبيًا بين الفئات.

n_classes=4: يحدد عدد الفئات أو المجموعات المستهدفة في البيانات. في هذه الحالة، هناك 4 فئات مختلفة.

n_redundant=1: يحدد عدد الميزات الزائدة (features) التي تكون خليطًا خطيًا من الميزات المفيدة الأخرى. أي سيتم إضافة ميزة واحدة زائدة مشتقة من الميزات الأصلية.

n_clusters_per_class=1: يحدد عدد التجمعات لكل فئة. تعيينه إلى 1 يعني أنه لكل فئة يوجد تجمع واحد فقط.

n_features=5: يحدد عدد الميزات الكلية (features) التي سيتم إنشاؤها لكل عينة. هنا، يوجد 5 ميزات لكل عينة.